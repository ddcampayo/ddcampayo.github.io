<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>CFD</title>

		<meta name="description" content="CFD">
		<meta name="author" content="Daniel Duque">

		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="../css/reveal.css">
		<link rel="stylesheet" href="../css/theme/black.css" id="theme">

		<!-- Theme used for syntax highlighting of code -->
		<link rel="stylesheet" href="../lib/css/zenburn.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? '../css/print/pdf.css' : '../css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
			  <section>
			    
			    <h2>Simulación de fluidos con código abierto</h2>
			    <h2>Convección (o advección) en 1D</h2>

			    
			    
			    <p>
			      <small>Por <a href="http://ddcampayo.github.io">Daniel Duque</a>
			      </small>
			    </p>
			  </section>

			  <!-- <section> -->
			  <!--   <h2>Índice</h2> -->
			  <!--   <ul> -->
			  <!--     <li><a href="./pasos.html">Pasos previos </a></li> -->
			  <!--     <li><a href="./Intro_plot.ipynb">Introducción a ipython (ipynb)</a></li> -->
			  <!--   </ul> -->
			  <!-- </section> -->


			  <section data-markdown>
			    <script type="text/template">
			      ### Discretización

			      Muy a menudo, se parte de las EDPs, conocidas, por ejempo:

			      $$\frac{\partial u}{\partial t} + c \frac{\partial u}{\partial x} = 0$$

			      Estas se *discretizan*: sustituyendo las derivadas por diferencias.

			      Sin embargo, este es un proceso de ida y vuelta, porque
			      las EDPs se deducen a nivel discreto.
			      
			    </script>
			  </section>

			  <section data-markdown>
			    <script type="text/template">
			      ### Deducción

			      Se suponen cambios de un campo $u$ sólo
			      en la dirección $x$

			      ![Esquema de convección en 1D](./conveccion_1d.png)

			      El cambio en la cantidad total $A \Delta x \, u_i$ será:

			      ``$$\frac{d }{d t} (A \Delta x  \, u_i ) = A c \, u_{i-1/2} - A c \,  u_{i+1/2}  $$``
			      
			    </script>
			  </section>


			  
			  <section data-markdown>
			    <script type="text/template">
			      ### Interpolación en las caras

			      ``$$\frac{d }{d t} (A \Delta x  \, u_i ) = A c \, u_{i-1/2} - A c \,  u_{i+1/2}  $$``

			      Un problema obvio es que no conocemos el campo en los puntos intermedios. Así que
			      podemos suponer una interpolación lineal:

			      ``$$ u_{i-1/2} \approx \frac {  u_{i-1/2}  + u_i}{2} $$``

			      ``$$ u_{i+1/2} \approx \frac {  u_{i}  + u_{i+1}}{2} $$``
			      
			    </script>
			  </section>

			  <section data-markdown>
			    <script type="text/template">
			      ### La EDP

			      De este modo,
			      
			      ``$$\frac{d }{d t} (A \Delta x  \, u_i ) = A c \frac{ \, u_{i-1} -  u_{i+1} }{2}  $$``

			      ``$$\frac{d u_i }{d t}  =   - c  \frac{ \, u_{i+1} -  u_{i-1} }{2 \Delta x}  $$``

			      La parte derecha se puede identificar como la derivada espacial (centrada):
			      
			      $$\frac{\partial u}{\partial t} + c \frac{\partial u}{\partial x} = 0$$
			      
			    </script>
			  </section>

			  <section data-markdown>
			    <script type="text/template">
			      ### Discretización del tiempo

			      Para nosotros, es más útil la expresión discreta:

			      ``$$\frac{d u_i }{d t}  =   - c  \frac{ \, u_{i+1} -  u_{i-1} }{2 \Delta x}  $$``

			      De hecho, habría que discretizar la derivada temporal también. Lo más sencillo
			      es el método de Euler:

			      ``$$\frac{d u_i }{d t}  \approx  \frac{ u^{n+1}_i - u^{n}_i  }{\Delta t}   $$ ``

			      Donde el tiempo es $t= n \Delta t$.
			      
			      
			    </script>
			  </section>

			  <section data-markdown>
			    <script type="text/template">
			      ### Algoritmo explícito

			      Interpretando que la parte derecha de la ecuación se refiere al paso actual:
			      
			      ``$$\frac{d u_i }{d t}  =   - c  \frac{ \, u^n_{i+1} -  u^n_{i-1} }{2 \Delta x}  $$``

			      Se llega a:
			      
			      ``$$u_i^{n+1} = u_i^n - c \frac{\Delta t}{2 \Delta x}(u_{i+1}^n-u_{i-1}^n)$$``

			      Atención a la combinación  $c \frac{\Delta t}{ \Delta x}$, es el
			      *número de Courant*.

			    </script>
			  </section>

			  <section data-markdown>
			    <script type="text/template">
			      ### Algoritmo implícito

			      Sin embargo, es más *estable* si la parte derecha se considera del siguiente
			      tiempo (¡desconocido!). Se llega a
			      
			      ``$$u_i^{n+1} = u_i^n - c \frac{\Delta t}{2 \Delta x}(u_{i+1}^{n+1}-u_{i-1}^{n+1})$$``

			    </script>
			  </section>



			  
			  <section data-markdown>
			    <script type="text/template">
			      ## Referencias


			      [12 Steps to Navier-Stokes](http://lorenabarba.com/blog/cfd-python-12-steps-to-navier-stokes/)
			    </script>
			  </section>


			</div>

		</div>

		<script src="../lib/js/head.min.js"></script>
		<script src="../js/reveal.js"></script>

		<script>

			// More info https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				transition: 'slide', // none/fade/slide/convex/concave/zoom


    // other options ...

			math: {
			mathjax: 'https://cdn.mathjax.org/mathjax/latest/MathJax.js',
			config: 'TeX-AMS_HTML-full'  // See http://docs.mathjax.org/en/latest/config-files.html
			},

			
				// More info https://github.com/hakimel/reveal.js#dependencies
				dependencies: [
					{ src: '../lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: '../plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: '../plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: '../plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: '../plugin/zoom-js/zoom.js', async: true },
					{ src: '../plugin/notes/notes.js', async: true },
//			{ src: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML', async: true }
			{ src: '../plugin/math/math.js', async: true }
			]

			});

		</script>

	</body>
</html>
